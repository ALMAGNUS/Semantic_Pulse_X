#!/usr/bin/env python3
"""
Guide d√©taill√© YouTube Data API v3 - Semantic Pulse X
Instructions pas √† pas pour obtenir la cl√© API YouTube
"""

import logging

# Configuration du logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def show_youtube_api_guide():
    """Guide d√©taill√© pour YouTube Data API v3"""
    logger.info("üì∫ GUIDE D√âTAILL√â YOUTUBE DATA API v3")
    logger.info("=" * 60)
    
    logger.info("üîë √âTAPE 1: Cr√©er un compte Google")
    logger.info("   1. Allez sur: https://accounts.google.com/")
    logger.info("   2. Cr√©ez un compte Google si vous n'en avez pas")
    logger.info("   3. Connectez-vous avec votre compte")
    
    logger.info("\nüèóÔ∏è √âTAPE 2: Cr√©er un projet dans Google Developers Console")
    logger.info("   1. Allez sur: https://console.developers.google.com/")
    logger.info("   2. Cliquez sur 'S√©lectionner un projet' en haut")
    logger.info("   3. Cliquez sur 'NOUVEAU PROJET'")
    logger.info("   4. Nommez votre projet: 'Semantic Pulse X'")
    logger.info("   5. Cliquez sur 'CR√âER'")
    logger.info("   6. Attendez que le projet soit cr√©√©")
    
    logger.info("\nüìö √âTAPE 3: Activer l'API YouTube Data v3")
    logger.info("   1. Dans votre projet, allez dans 'APIs et services' > 'Biblioth√®que'")
    logger.info("   2. Recherchez 'YouTube Data API v3'")
    logger.info("   3. Cliquez sur 'YouTube Data API v3'")
    logger.info("   4. Cliquez sur 'ACTIVER'")
    logger.info("   5. Attendez l'activation")
    
    logger.info("\nüîê √âTAPE 4: Cr√©er des identifiants (Cl√© API)")
    logger.info("   1. Allez dans 'APIs et services' > 'Identifiants'")
    logger.info("   2. Cliquez sur '+ CR√âER DES IDENTIFIANTS'")
    logger.info("   3. S√©lectionnez 'Cl√© API'")
    logger.info("   4. Une cl√© API sera g√©n√©r√©e automatiquement")
    logger.info("   5. Copiez cette cl√© (commence par 'AIza...')")
    
    logger.info("\n‚öôÔ∏è √âTAPE 5: Configurer les restrictions (Optionnel mais recommand√©)")
    logger.info("   1. Cliquez sur l'ic√¥ne crayon √† c√¥t√© de votre cl√© API")
    logger.info("   2. Dans 'Restrictions d'application':")
    logger.info("      - S√©lectionnez 'Aucune' pour les tests")
    logger.info("      - Ou 'Adresses IP HTTP' pour la production")
    logger.info("   3. Dans 'Restrictions d'API':")
    logger.info("      - S√©lectionnez 'Restreindre la cl√©'")
    logger.info("      - Cochez 'YouTube Data API v3'")
    logger.info("   4. Cliquez sur 'ENREGISTRER'")
    
    logger.info("\nüß™ √âTAPE 6: Tester votre cl√© API")
    logger.info("   1. Ouvrez un terminal")
    logger.info("   2. Testez avec curl:")
    logger.info("      curl 'https://www.googleapis.com/youtube/v3/search?part=snippet&q=test&key=VOTRE_CLE_API'")
    logger.info("   3. Vous devriez voir une r√©ponse JSON")

def show_instagram_api_guide():
    """Guide pour Instagram Basic Display API"""
    logger.info("\nüì∏ GUIDE INSTAGRAM BASIC DISPLAY API")
    logger.info("=" * 60)
    
    logger.info("üîë √âTAPE 1: Cr√©er un compte Facebook Developer")
    logger.info("   1. Allez sur: https://developers.facebook.com/")
    logger.info("   2. Cliquez sur 'Commencer'")
    logger.info("   3. Connectez-vous avec votre compte Facebook")
    logger.info("   4. Acceptez les conditions d'utilisation")
    
    logger.info("\nüèóÔ∏è √âTAPE 2: Cr√©er une application")
    logger.info("   1. Cliquez sur 'Mes applications'")
    logger.info("   2. Cliquez sur 'Cr√©er une application'")
    logger.info("   3. S√©lectionnez 'Consommateur'")
    logger.info("   4. Nommez votre app: 'Semantic Pulse X'")
    logger.info("   5. Ajoutez votre email de contact")
    logger.info("   6. Cliquez sur 'Cr√©er une application'")
    
    logger.info("\nüì± √âTAPE 3: Ajouter Instagram Basic Display")
    logger.info("   1. Dans votre app, cliquez sur 'Ajouter un produit'")
    logger.info("   2. Trouvez 'Instagram Basic Display'")
    logger.info("   3. Cliquez sur 'Configurer'")
    logger.info("   4. Cliquez sur 'Cr√©er un nouvel app'")
    
    logger.info("\n‚öôÔ∏è √âTAPE 4: Configurer les param√®tres")
    logger.info("   1. Dans 'Instagram Basic Display' > 'Param√®tres de base':")
    logger.info("   2. Valid OAuth Redirect URIs: http://localhost:8080")
    logger.info("   3. Deauthorize Callback URL: http://localhost:8080")
    logger.info("   4. Cliquez sur 'Enregistrer les modifications'")
    
    logger.info("\nüîê √âTAPE 5: Obtenir le token d'acc√®s")
    logger.info("   1. Allez dans 'Instagram Basic Display' > 'Utilisateurs de test'")
    logger.info("   2. Ajoutez votre compte Instagram")
    logger.info("   3. G√©n√©rez un token d'acc√®s utilisateur")
    logger.info("   4. Copiez le token (commence par 'IGQVJ...')")

def show_setup_instructions():
    """Instructions de configuration locale"""
    logger.info("\nüîß CONFIGURATION LOCALE")
    logger.info("=" * 60)
    
    logger.info("üìù √âTAPE 1: Cr√©er le fichier .env")
    logger.info("   1. Copiez le template:")
    logger.info("      cp env.template .env")
    logger.info("   2. √âditez le fichier .env:")
    logger.info("      INSTAGRAM_ACCESS_TOKEN=IGQVJ...")
    logger.info("      YOUTUBE_API_KEY=AIza...")
    
    logger.info("\nüß™ √âTAPE 2: Tester la configuration")
    logger.info("   1. Lancez le test de connexion:")
    logger.info("      python scripts/collect_secure_external.py")
    logger.info("   2. V√©rifiez les logs pour les erreurs")
    
    logger.info("\nüìä √âTAPE 3: Collecter les donn√©es")
    logger.info("   1. Si les tests passent, lancez la collecte")
    logger.info("   2. Les donn√©es seront sauvegard√©es dans:")
    logger.info("      - data/raw/external_apis/ (local)")
    logger.info("      - MinIO Data Lake (cloud)")

def show_troubleshooting():
    """Guide de d√©pannage"""
    logger.info("\nüîß D√âPANNAGE")
    logger.info("=" * 60)
    
    logger.info("‚ùå Erreur 401 Unauthorized:")
    logger.info("   - V√©rifiez que votre cl√© API est correcte")
    logger.info("   - V√©rifiez que l'API est activ√©e")
    
    logger.info("\n‚ùå Erreur 403 Forbidden:")
    logger.info("   - V√©rifiez les restrictions de votre cl√© API")
    logger.info("   - Assurez-vous que YouTube Data API v3 est autoris√©")
    
    logger.info("\n‚ùå Erreur 429 Too Many Requests:")
    logger.info("   - Vous avez atteint la limite de quota")
    logger.info("   - Attendez avant de refaire des requ√™tes")
    
    logger.info("\n‚ùå Token Instagram invalide:")
    logger.info("   - V√©rifiez que le token commence par 'IGQVJ'")
    logger.info("   - R√©g√©n√©rez le token si n√©cessaire")
    
    logger.info("\n‚ùå Erreur de connexion:")
    logger.info("   - V√©rifiez votre connexion internet")
    logger.info("   - V√©rifiez que les services sont accessibles")

def main():
    """Fonction principale"""
    logger.info("üöÄ GUIDE COMPLET APIs EXTERNES - PHASE 2")
    logger.info("=" * 80)
    
    show_youtube_api_guide()
    show_instagram_api_guide()
    show_setup_instructions()
    show_troubleshooting()
    
    logger.info("\n" + "=" * 80)
    logger.info("‚úÖ Guide termin√©!")
    logger.info("üí° Suivez les √©tapes dans l'ordre pour obtenir vos cl√©s API")
    logger.info("üöÄ Une fois configur√©, lancez: python scripts/collect_secure_external.py")

if __name__ == "__main__":
    main()




