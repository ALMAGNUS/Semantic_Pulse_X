#!/usr/bin/env python3
"""
Test simple - Semantic Pulse X
√âvite les biblioth√®ques probl√©matiques
"""

import sys
from pathlib import Path
import json

# Ajouter le r√©pertoire racine au PYTHONPATH
project_root = Path(__file__).parent.parent.absolute()
sys.path.insert(0, str(project_root))

def test_simple():
    """Test simple sans biblioth√®ques lourdes"""
    print("üß™ TEST SIMPLE - SEMANTIC PULSE X")
    print("=" * 50)
    
    try:
        # Test 1: Chargement des donn√©es
        print("\nüìä Test 1: Chargement des donn√©es")
        data_file = Path("data/processed/donnees_traitees_demo.json")
        if data_file.exists():
            with open(data_file, 'r', encoding='utf-8') as f:
                donnees = json.load(f)
            print(f"‚úÖ {len(donnees)} donn√©es charg√©es")
            
            # Afficher les donn√©es
            for i, data in enumerate(donnees, 1):
                print(f"   {i}. {data['source_type'].upper()}: '{data['contenu']}'")
        else:
            print("‚ùå Aucune donn√©e trouv√©e")
            return
        
        # Test 2: Analyse des mots √©motionnels
        print("\nüé≠ Test 2: Analyse des mots √©motionnels")
        
        # Mots √©motionnels √† chercher
        emotion_words = ['adore', 'g√©nial', 'super', 'nulle', 'd√©teste']
        
        for data in donnees:
            texte = data['contenu']
            source = data['source_type']
            mots_trouves = []
            
            for mot in emotion_words:
                if mot in texte.lower():
                    mots_trouves.append(mot)
            
            if mots_trouves:
                print(f"   {source.upper()}: {mots_trouves}")
        
        # Test 3: Tra√ßabilit√© des sources
        print("\nüîç Test 3: Tra√ßabilit√© des sources")
        
        mots_sources = {}
        for data in donnees:
            texte = data['contenu'].lower()
            source = data['source_type']
            
            for mot in emotion_words:
                if mot in texte:
                    if mot not in mots_sources:
                        mots_sources[mot] = []
                    mots_sources[mot].append(source)
        
        for mot, sources in mots_sources.items():
            print(f"   '{mot}': {sources}")
        
        # Test 4: R√©sum√©
        print("\nüìà Test 4: R√©sum√©")
        print(f"   ‚Ä¢ {len(donnees)} donn√©es analys√©es")
        print(f"   ‚Ä¢ {len(mots_sources)} mots √©motionnels trouv√©s")
        print(f"   ‚Ä¢ Sources: {set(data['source_type'] for data in donnees)}")
        
        print("\n‚úÖ Test simple r√©ussi !")
        print("   Le syst√®me fonctionne sans les biblioth√®ques lourdes.")
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_simple()
